import{j as a}from"./jsx-runtime-f961835c.js";import{r as S}from"./index-f80c8c95.js";import{g as C,F as E}from"./FormField-d640972f.js";const f=t=>{const{onChange:r,onKeyDown:l,onSubmit:i,onButtonClick:s,button:c,buttonText:u="Leita",inputRef:h,buttonRef:b,fieldWrapperProps:y,...o}=C(t),{value:d,defaultValue:g,placeholder:q}=o,[v,_]=S.useState(void 0),p=!!(d??v??!!g),V=!p&&!q,w=d!=null?r:n=>{_(!!n.target.value),r&&r(n)},x=!!s||c,m=s||i;return a.jsx(E,{extraClassName:"SearchInput",empty:V,filled:p,...y,renderInput:(n,R,T)=>a.jsxs("div",{className:n.input,...T(),children:[a.jsx("input",{className:"SearchInput__input",onChange:w,...R,onKeyDown:i?e=>{e.key==="Enter"&&!i(e.currentTarget.value)&&e.preventDefault(),l&&l(e)}:l,...o,ref:h})," ",x&&a.jsx("button",{className:"SearchInput__button",type:"submit",onClick:m&&(e=>!m(e.currentTarget.value)&&e.preventDefault()),title:u,ref:b,disabled:t.disabled||t.readOnly,children:u})]})})};try{f.displayName="SearchInput",f.__docgenInfo={description:"",displayName:"SearchInput",props:{className:{defaultValue:null,description:'Container className - alongside "FormField"',name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},assistText:{defaultValue:null,description:"",name:"assistText",required:!1,type:{name:"string | Element"}},hideLabel:{defaultValue:null,description:"",name:"hideLabel",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},invalid:{defaultValue:null,description:"",name:"invalid",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | Element"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},reqText:{defaultValue:null,description:`Hidden label prefix text to indicate that the field is required.

If your field is required but should not say so in its label
then set this prop to \`false\`

Default: \`"Þarf að fylla út"\``,name:"reqText",required:!1,type:{name:"string | false"}},id:{defaultValue:null,description:'Optional pre-determinted id="" for the __input',name:"id",required:!1,type:{name:"string"}},wrapperRef:{defaultValue:null,description:"@deprecated Use `*Props.wrapperProps.ref` instead (Will be removed in v0.11)\n\nRef object pointing to the outermost `.FormField` element",name:"wrapperRef",required:!1,type:{name:"RefObject<HTMLElement>"}},wrapperProps:{defaultValue:null,description:`Custom HTML attributes for the component's wrapper element.

Note, however, that some props may be intentionally
excluded from the list.

__WARNING:__
In some cases props added this way can break the component, og hurt its
accessibility.  Also, some props may get ignored, or over-ridden by the
component. User discretion is advised.`,name:"wrapperProps",required:!1,type:{name:"HTMLProps<null, never>"}},ssr:{defaultValue:null,description:`Indicates whether server-side rendering is supported or not.

The \`ssr-only\` value is useful for cases where you need
to demo the server-rendered version in a browser.`,name:"ssr",required:!1,type:{name:"SSRSupport"}},small:{defaultValue:null,description:"",name:"small",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"string"}},onSubmit:{defaultValue:null,description:"Triggered when user hits ENTER key with the focus inside the input field.\n\nReturn `true` to __allow__ the browser's default submit hehavior.",name:"onSubmit",required:!1,type:{name:"((value: string) => boolean | void)"}},onButtonClick:{defaultValue:null,description:"Custom action to perform when the user clicks the search button.\n\nReturn `true` to __allow__ the browser's default submit hehavior.\n\nDefaults to `onSubmit`.",name:"onButtonClick",required:!1,type:{name:"((value: string) => boolean | void)"}},button:{defaultValue:null,description:"Toggle the search `<button/>`.\n\nDefaults to `true` if onButtonClick is passed, otherwise false.",name:"button",required:!1,type:{name:"boolean"}},buttonText:{defaultValue:null,description:"",name:"buttonText",required:!1,type:{name:"string"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},buttonRef:{defaultValue:null,description:"",name:"buttonRef",required:!1,type:{name:"RefObject<HTMLButtonElement>"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}}}}}catch{}export{f as S};
//# sourceMappingURL=SearchInput-cfe56de2.js.map
