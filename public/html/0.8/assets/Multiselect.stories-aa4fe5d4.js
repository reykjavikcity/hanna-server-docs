import{j as t}from"./jsx-runtime-f961835c.js";import{r as d}from"./index-f80c8c95.js";import{m as C}from"./classUtils-ef6e60eb.js";import{a as A}from"./domid-a414b1fb.js";import"./getSVGtext-8f35f9ab.js";import{a as Z,n as ee}from"./getScrollbarWidth-108c5f9b.js";import{g as te}from"./i18n-18e56484.js";import{u as ae}from"./useDomid-e1962be7.js";import{C as ne}from"./Checkbox-f86d5c0d.js";import{F as re,a as le}from"./FormField-39c81e7b.js";import{T as se}from"./TagPill-6f02de53.js";import"./_Link-b7c9c4c9.js";import{H as oe}from"./HiddenTrigger-aae853a4.js";import{f as ie}from"./knobs-764132b4.js";import"./_TogglerInput-f0660bf5.js";import"./env-5a2a565d.js";import"./browserSide-4379edd8.js";import"./_Button-f8e7ee7f.js";import"./cssutils-d90b972e.js";import"./assets-ca39b462.js";import"./themes-56ee0168.js";const N=e=>{const s=e.Tag||"span";return t.jsx(s,{tabIndex:0,onFocus:u=>{var h;let o=u.currentTarget,n=Math.max(e.depth||0,1);for(;n--&&o;)o=o.parentElement;if(!o)return;const i=o.querySelectorAll("a,input, select, textarea,button, [tabindex]"),p=e.atTop?i.length-1:0;(h=i[p])==null||h.focus()}})};try{N.displayName="FocusTrap",N.__docgenInfo={description:"A focus trap element that can be used to keep keyboard focus within a container block.",displayName:"FocusTrap",props:{Tag:{defaultValue:null,description:"The HTML tag to use for the trap element. (Default `<span />`)",name:"Tag",required:!1,type:{name:"enum",value:[{value:'"span"'},{value:'"li"'}]}},atTop:{defaultValue:null,description:"Set to `true` for focus traps positioned at the top of a container.",name:"atTop",required:!1,type:{name:"boolean"}},depth:{defaultValue:null,description:"How deep the trap is placed in the DOM tree beneath its container element.\n\nDefault: `1`",name:"depth",required:!1,type:{name:"number"}}}}}catch{}const ue=1e4,ce=100,de=1,me=1/10,pe=e=>10/(10+e),P=(e,s)=>{let u=0;return s.forEach(o=>{e.split(/\s+/).forEach((n,i)=>{let p=0;if(n===o)p+=ue;else{const h=n.indexOf(o);h===0?p+=ce:h>0&&(p+=de)}u+=p*pe(i)})}),u},fe=(e,s)=>{var i;if(!e.value)return 0;const u=e.value.toLowerCase().trim(),o=((i=e.label)==null?void 0:i.toLowerCase().trim())||u;let n=P(o,s);return n||(n=me*P(u,s)),n},he=(e,s,u=fe)=>{if(!s.trim())return[...e];const o=s.toLowerCase().trim().split(/\s+/);return e.map(n=>({item:n,score:u(n,o,s)})).filter(({score:n})=>n>0).sort((n,i)=>n.score===i.score?0:n.score<i.score?1:-1).map(({item:n})=>n)},be=(e,s)=>{const u=Array.isArray(e)?e:[e],o=d.useMemo(()=>u,u);d.useEffect(()=>{const n=i=>{!o.some(h=>{const f=h.current;return f?f.contains(i.target):!1})&&s(i)};return document.addEventListener("mousedown",n),document.addEventListener("touchstart",n),()=>{document.removeEventListener("mousedown",n),document.removeEventListener("touchstart",n)}},[s,o])},z={searchableLimit:20,summaryLimit:20},{searchableLimit:ye,summaryLimit:ge}=z,ve={pl:{search:"Wyszukaj opcje",buttonShow:"Pokaż opcje",currentValues:"Wybrane wartości",noneFoundMsg:"Brak dopasowań"},en:{search:"Search options",buttonShow:"Show options",currentValues:"Currently selected",noneFoundMsg:"No matches"},is:{search:"Leita í valkostum",buttonShow:"Birta valkosti",currentValues:"Valin gildi",noneFoundMsg:"Ekkert passar"}},E=e=>{const{onSelected:s,options:u,disabled:o,readOnly:n}=e,i=o===!0,p=!i&&o,h=ae(e.name),[f,I]=Z(e,"value",[]),D=f.length>0,G=!D&&!e.placeholder,R=f.length?void 0:e.placeholder,M=te(e,ve),V=d.useRef(null),_=d.useRef(null),[v,T]=d.useState(-1),[q,O]=d.useState(""),[b,K]=d.useState(!1),x=a=>{K(r=>(a=typeof a=="boolean"?a:!r,a||(_.current.querySelector(".Multiselect__choices").scrollTo(0,0),O(""),T(-1)),a))};be(_,()=>x(!1));const S=d.useMemo(()=>u.map(a=>typeof a=="string"?{value:a}:a),[u]),$=e.forceSearchable||S.length>=ye,J=f.length>0&&(e.forceSummary||!b||S.length>=ge),w=d.useMemo(()=>he(S,q,e.searchScoring),[q,S,e.searchScoring]),j=d.useCallback(a=>{const r=a.value,m=f.indexOf(r)===-1,c=m?[...f,r]:f.filter(l=>l!==r),y=S.filter(l=>c.includes(l.value)).map(l=>l.value);I(y),s&&s({value:a.value,checked:m,option:a,selectedValues:y})},[f,S,s,I]),B=a=>{const r=a.target.value;O(r===" "?"":r),x(!0)},Q=a=>{q.length===0&&[" ","Delete","Backspace"].includes(a.key)&&x(v>-1?!0:!b)};return d.useEffect(()=>{if(!b)return;const a=r=>{const m=V.current;if(r.key==="ArrowUp")r.preventDefault(),m.focus(),T(c=>c===0?w.length-1:c-1);else if(r.key==="ArrowDown")r.preventDefault(),m.focus(),T(c=>c===w.length-1?0:c+1);else if(r.key==="Escape")r.preventDefault(),m.blur(),m.focus(),x(!1);else if(r.key==="Enter"||r.key===" "){if(r.target.closest(".Multiselect__currentvalues"))return;if(v>=0&&v<w.length){r.preventDefault();const y=w[v];y&&j(y)}}};return document.addEventListener("keydown",a),()=>{document.removeEventListener("keydown",a)}},[v,w,b,j,V]),d.useEffect(()=>{const a=_.current;if(!a)return;let r;const m=()=>clearTimeout(r),c=()=>{r=setTimeout(()=>x(!1),200)};return a.addEventListener("focusin",m),a.addEventListener("focusout",c),()=>{a.removeEventListener("focusin",m),a.removeEventListener("focusout",c)}},[]),d.useEffect(()=>{var a,r;(r=(a=_.current)==null?void 0:a.querySelectorAll(".Multiselect__option")[v])==null||r.scrollIntoView({behavior:"smooth",block:"nearest"})},[v]),t.jsx(re,{extraClassName:C("Multiselect",e.nowrap&&"nowrap"),group:"inputlike",filled:D,empty:G,...le(e),renderInput:(a,r,m,c)=>{const{id:y}=r;return t.jsxs("div",{className:C("Multiselect__input",[b&&"open"],a.input),...m(),"data-sprinkled":c,ref:_,children:[c?$?t.jsx("input",{className:"Multiselect__search",id:`toggler:${y}`,"aria-label":M.search,"aria-controls":A(),"data-expanded":b||void 0,onChange:B,onKeyDown:Q,onClick:()=>x(),value:q,placeholder:R,disabled:i,ref:V}):t.jsx("button",{className:"Multiselect__toggler",id:`toggler:${y}`,type:"button","aria-label":M.buttonShow,"aria-controls":A(),"aria-expanded":b,onClick:()=>x(),disabled:i,ref:V,children:R||" "}):null,t.jsxs("div",{className:"Multiselect__choices",tabIndex:-1,children:[c&&J&&t.jsx("div",{className:"Multiselect__currentvalues",onClick:b||i?void 0:()=>{var l;x(),(l=V.current)==null||l.focus()},"aria-label":`${M.currentValues}:`,children:f.map(l=>S.find(g=>g.value===l)).filter(ee).map((l,g)=>t.jsx(se,{large:!0,label:l.label||l.value,...b&&!n?{removable:!0,onRemove:()=>{j(l)}}:{removable:!1}},g))}),t.jsxs("ul",{id:y,className:"Multiselect__options","aria-expanded":c?b:void 0,hidden:c&&!b,role:"group","aria-labelledby":r["aria-labelledby"],"aria-describedby":r["aria-describedby"],"aria-required":e.required,children:[w.length?w.map((l,g)=>{const X=l.disabled!=null?l.disabled:p&&p.includes(g),Y=f.includes(l.value);return t.jsx(ne,{className:C("Multiselect__option",v===g&&"focused"),disabled:X,readOnly:n,required:e.required,Wrapper:"li",name:h,...l,checked:Y,"aria-invalid":e.invalid,label:l.label||l.value,onChange:()=>j(l),onFocus:()=>T(g),wrapperProps:{onMouseEnter:()=>T(g)}},g)}):q?t.jsx("li",{className:"Multiselect__noresults",children:M.noneFoundMsg}):void 0,t.jsx(N,{Tag:"li"})]})]})]})}})};E.meta=z;try{E.displayName="Multiselect",E.__docgenInfo={description:"",displayName:"Multiselect",props:{className:{defaultValue:null,description:'Container className - alongside "FormField"',name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:'Optional pre-determinted id="" for the __input',name:"id",required:!1,type:{name:"string"}},ssr:{defaultValue:null,description:`Indicates whether server-side rendering is supported or not.

The \`ssr-only\` value is useful for cases where you need
to demo the server-rendered version in a browser.`,name:"ssr",required:!1,type:{name:"SSRSupport"}},wrapperProps:{defaultValue:null,description:`Custom HTML attributes for the component's wrapper element.

Note, however, that some props may be intentionally
excluded from the list.

__WARNING:__
In some cases props added this way can break the component, og hurt its
accessibility.  Also, some props may get ignored, or over-ridden by the
component. User discretion is advised.`,name:"wrapperProps",required:!1,type:{name:"HTMLProps<null, never>"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},assistText:{defaultValue:null,description:"",name:"assistText",required:!1,type:{name:"string | Element"}},hideLabel:{defaultValue:null,description:"",name:"hideLabel",required:!1,type:{name:"boolean"}},invalid:{defaultValue:null,description:"",name:"invalid",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | Element"}},reqText:{defaultValue:null,description:`Hidden label prefix text to indicate that the field is required.

If your field is required but should not say so in its label
then set this prop to \`false\`

Default: \`"Þarf að fylla út"\``,name:"reqText",required:!1,type:{name:"string | false"}},wrapperRef:{defaultValue:null,description:"@deprecated Use `*Props.wrapperProps.ref` instead (Will be removed in v0.11)\n\nRef object pointing to the outermost `.FormField` element",name:"wrapperRef",required:!1,type:{name:"RefObject<HTMLElement>"}},LabelTag:{defaultValue:null,description:"",name:"LabelTag",required:!1,type:{name:"enum",value:[{value:'"h3"'},{value:'"h4"'},{value:'"h5"'}]}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"string[] | TogglerGroupOptions<string>"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | readonly number[]"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:"RestrictedInputProps"}},onSelected:{defaultValue:null,description:"",name:"onSelected",required:!1,type:{name:"((payload: { value: string; checked: boolean; option: TogglerGroupOption<string>; selectedValues: string[]; }) => void)"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-invalid":{defaultValue:null,description:"",name:"aria-invalid",required:!1,type:{name:'boolean | "true" | "false"'}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string[]"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string[]"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},small:{defaultValue:null,description:"",name:"small",required:!1,type:{name:"boolean"}},nowrap:{defaultValue:null,description:`Prevent the selected items from wrapping into multiple lines.
Use this option when vertical space is limited.`,name:"nowrap",required:!1,type:{name:"boolean"}},searchScoring:{defaultValue:null,description:`Custom function to calculate a search score for a given option item.
Higher scores mean better matches.

A score of zero (or less) means the item is not a valid match.`,name:"searchScoring",required:!1,type:{name:"SearchScoringfn"}},forceSummary:{defaultValue:null,description:`Force display the current values at the top of the dropdown,
even when the total options are fewer than
\`Multiselect.meta.summaryLimit\`.

NOTE: Using this option is generally not recommended,
because the search UI (i.e. the on-screen keyboard), takes up a lot of
space on mobile devices.`,name:"forceSummary",required:!1,type:{name:"boolean"}},forceSearchable:{defaultValue:null,description:`Force the options to be searchable, even when they're
fewer than \`Multiselect.meta.searchableLimit\`.

NOTE: Using this option is generally not recommended,
because the summary takes up valuable space when there are only a few
items.`,name:"forceSearchable",required:!1,type:{name:"boolean"}},texts:{defaultValue:null,description:"",name:"texts",required:!1,type:{name:"MultiselectI18n"}},lang:{defaultValue:null,description:"",name:"lang",required:!1,type:{name:"enum",value:[{value:'"is"'},{value:'"en"'},{value:'"pl"'}]}}}}}catch{}const F=ie({hideLabel:!1}),We={title:"Forms/Multiselect",parameters:{viewport:{defaultViewport:"responsive"}}},L=["Chocolate","Strawberry","Vanilla","Coffee","Mint Chocolate Chip","Rocky Road","Cookies and Cream","Butter Pecan","Pistachio","Maple Walnut","Caramel","Fudge"],xe=e=>{const{nowrap:s,empty:u,forceSearchable:o,forceSummary:n}=e,i=F.getProps(e),p=u?[]:s?L:L.slice(2,4),h=[s,u,o,n,JSON.stringify(i)].join("-");return t.jsxs(d.Fragment,{children:[t.jsx(E,{nowrap:s,...i,label:"Veldu tegund",name:"flavours",options:L,value:p,forceSearchable:o,forceSummary:n}),t.jsxs(oe,{children:[t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{}),t.jsx("br",{})]})]},h)},k={render:e=>t.jsx(xe,{...e}),argTypes:{nowrap:{name:"No-wrap"},empty:{name:"Empty"},forceSearchable:{name:"Searchable options"},forceSummary:{name:"Summarize selected values",if:{arg:"empty",truthy:!1}},...F.argTypes},args:{nowrap:!1,empty:!1,forceSearchable:!1,forceSummary:!1,...F.args}};var H,W,U;k.parameters={...k.parameters,docs:{...(H=k.parameters)==null?void 0:H.docs,source:{originalSource:`{
  render: args => <MultiselectStory {...args} />,
  argTypes: {
    nowrap: {
      name: 'No-wrap'
    },
    empty: {
      name: 'Empty'
    },
    forceSearchable: {
      name: 'Searchable options'
    },
    forceSummary: {
      name: 'Summarize selected values',
      if: {
        arg: 'empty',
        truthy: false
      }
    },
    ...ffCtrls.argTypes
  },
  args: {
    nowrap: false,
    empty: false,
    forceSearchable: false,
    forceSummary: false,
    ...ffCtrls.args
  }
}`,...(U=(W=k.parameters)==null?void 0:W.docs)==null?void 0:U.source}}};const Ue=["_Multiselect"];export{k as _Multiselect,Ue as __namedExportsOrder,We as default};
//# sourceMappingURL=Multiselect.stories-aa4fe5d4.js.map
