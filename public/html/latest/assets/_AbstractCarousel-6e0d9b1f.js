import{j as c}from"./jsx-runtime-f961835c.js";import{g as H,r as v}from"./index-f80c8c95.js";import{f as O}from"./focusElm-346ced9a.js";import{t as $}from"./throttle-99eb2ade.js";import{m as R}from"./getSVGtext-a8bc7f1c.js";import{n as B}from"./_useMobileMenuToggling-7bb485b9.js";import{u as W}from"./browserSide-4379edd8.js";import"./_Link-b7c9c4c9.js";var L=function(e,i,u){var r,o,t,a=function(){for(var m=[],l=0;l<arguments.length;l++)m[l]=arguments[l];o=m,t=this,u&&!r&&e.apply(t,o),r&&clearTimeout(r),r=setTimeout(function(){a.cancel(!0)},i)};return a.cancel=function(m){r&&clearTimeout(r),m&&r&&e.apply(t,o),r=void 0},a};L.d=function(e,i){return L(function(u){for(var r=[],o=1;o<arguments.length;o++)r[o-1]=arguments[o];u.apply(this,r)},e,i)};var F=L;const I=H(F),U={prefix:""},z=new Array(50).join(" ").split(""),S=e=>{const{current:i,itemCount:u,setCurrent:r,texts:o=U,wrapperProps:t}=e,a=o.prefix?`${o.prefix} `:"";return c.jsx("div",{...t,className:R("CarouselStepper",null,(t||{}).className),children:z.slice(0,u).map((m,l)=>{const C=i===l||void 0,h=a+(l+1);return c.jsx("button",{className:"CarouselStepper__button",type:"button",disabled:C,"aria-pressed":C,"aria-controls":e["aria-controls"],onClick:()=>r(l),"aria-label":h,title:h,children:h},l)})})};try{S.displayName="CarouselStepper",S.__docgenInfo={description:"",displayName:"CarouselStepper",props:{current:{defaultValue:null,description:"",name:"current",required:!0,type:{name:"number"}},itemCount:{defaultValue:null,description:"",name:"itemCount",required:!0,type:{name:"number"}},setCurrent:{defaultValue:null,description:"",name:"setCurrent",required:!0,type:{name:"(idx: number) => void"}},"aria-controls":{defaultValue:null,description:"",name:"aria-controls",required:!1,type:{name:"string"}},texts:{defaultValue:null,description:"",name:"texts",required:!1,type:{name:"Readonly<{ prefix: string; }>"}},wrapperProps:{defaultValue:null,description:`Custom HTML attributes for the component's wrapper element.

Note, however, that some props may be intentionally
excluded from the list.

__WARNING:__
In some cases props added this way can break the component, og hurt its
accessibility.  Also, some props may get ignored, or over-ridden by the
component. User discretion is advised.`,name:"wrapperProps",required:!1,type:{name:"HTMLProps<null, never>"}}}}}catch{}const D=(e,i)=>{const u=e.scrollLeft+i;e.scrollTo(u,e.scrollTop)},M=e=>{const{title:i,items:u=[],Component:r,ComponentProps:o,childrenHTML:t,bem:a="Carousel",modifier:m,ssr:l,className:C,wrapperProps:h}=e,y=W(l),T=e.children?Array.isArray(e.children)?e.children.filter(B):[e.children]:void 0,[b,j]=v.useState(),P=v.useMemo(()=>{if(!(t!=null&&t.trim()))return;if(!y)return 1;const n=document.createElement("div");return n.innerHTML=t,n.children.length},[t,y]),_=e.itemCount!=null?e.itemCount:t?P:(T||u).length,x=v.useRef(null),[p,q]=v.useState(0),f=y&&x.current;v.useEffect(()=>{if(!f)return;const n=()=>{var s;j((s=f.parentElement)==null?void 0:s.getBoundingClientRect().left),D(f,0)},d=$(()=>{const{scrollLeft:s,children:A}=f;Array.from(A).find((V,k)=>{if(s<=V.offsetLeft+V.offsetWidth/2)return q(k),!0})},300,!0);return n(),f.addEventListener("scroll",d,{passive:!0}),window.addEventListener("resize",n,{passive:!0}),()=>{f.removeEventListener("scroll",d),window.removeEventListener("resize",n)}},[f]);const g=n=>{const d=x.current,s=d.children[n];s&&(q(n),d.scrollLeft=s.offsetLeft||1,setTimeout(()=>O.focusElm(s),500))},{delayedScrollLeft:w,delayedScrollRight:N}=v.useMemo(()=>{const n=I(s=>{g(s-1),setTimeout(()=>n(s-1),0)},1e3),d=I(s=>{g(s+1),setTimeout(()=>d(s+1),0)},1e3);return{delayedScrollLeft:n,delayedScrollRight:d}},[]);if(!_)return null;const E=c.jsx("div",{className:`${a}__itemlist`,style:b?{"--Carousel--leftOffset":`${b}px`}:void 0,"data-scroll-snapping":b?"true":void 0,ref:x,dangerouslySetInnerHTML:t?{__html:t}:void 0,children:t?void 0:T||u.map((n,d)=>c.jsx(r,{...o,...n},d))});return c.jsxs("div",{...h,className:R(a,m,C||(h||{}).className),"data-sprinkled":y,children:[i&&c.jsx("h2",{className:`${a}__title`,children:i}),y?c.jsxs("div",{className:`${a}__itemlist-wrapper`,children:[E,p>0&&c.jsx("div",{className:`${a}__itemlist-goLeft`,onClick:()=>{w.cancel(),g(p-1)},onMouseOver:()=>w(p),onMouseOut:()=>w.cancel()}),p<_-1&&c.jsx("div",{className:`${a}__itemlist-goRight`,onClick:()=>{N.cancel(),g(p+1)},onMouseOver:()=>N(p),onMouseOut:()=>N.cancel()})]}):E,y&&c.jsx(S,{itemCount:_,setCurrent:g,current:p})]})};try{M.displayName="AbstractCarousel",M.__docgenInfo={description:"",displayName:"AbstractCarousel",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},scrollRight:{defaultValue:null,description:"@deprecated Ingored because never used (Will be removed in v0.11)",name:"scrollRight",required:!1,type:{name:"boolean"}},ssr:{defaultValue:null,description:`Indicates whether server-side rendering is supported or not.

The \`ssr-only\` value is useful for cases where you need
to demo the server-rendered version in a browser.`,name:"ssr",required:!1,type:{name:"SSRSupport"}},itemCount:{defaultValue:null,description:"Explicit number of items contained by the `children` prop\n\nUse this when your returned child elements are wrapped in a\n`<Fragment />` or some such.",name:"itemCount",required:!1,type:{name:"number"}},items:{defaultValue:null,description:"",name:"items",required:!1,type:{name:"I[]"}},childrenHTML:{defaultValue:null,description:"HTML content that should be dangerously inserted directly into the\n`__itemlist` element",name:"childrenHTML",required:!1,type:{name:"string"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"((props: I & P) => ReactElement<any, string | JSXElementConstructor<any>> | null)"}},ComponentProps:{defaultValue:null,description:"",name:"ComponentProps",required:!1,type:{name:"Record<string, unknown>"}},wrapperProps:{defaultValue:null,description:`Custom HTML attributes for the component's wrapper element.

Note, however, that some props may be intentionally
excluded from the list.

__WARNING:__
In some cases props added this way can break the component, og hurt its
accessibility.  Also, some props may get ignored, or over-ridden by the
component. User discretion is advised.`,name:"wrapperProps",required:!1,type:{name:"HTMLProps<null, never>"}},startSeen:{defaultValue:null,description:"@deprecated This prop does nothing nowadays (Will be removed in v0.11)",name:"startSeen",required:!1,type:{name:"boolean"}},modifier:{defaultValue:null,description:`List of CSS BEM --modifier's to add to the component's main wrapper.

All falsy values are neatly skipped.`,name:"modifier",required:!1,type:{name:"ClassNameModifiers"}},bem:{defaultValue:null,description:"CSS BEM class-name prefix to be used for this component. Defaults to the same as the original component's displayName",name:"bem",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}}}}}catch{}export{M as A};
//# sourceMappingURL=_AbstractCarousel-6e0d9b1f.js.map
