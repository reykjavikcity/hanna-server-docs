import{j as o}from"./jsx-runtime-f961835c.js";import{r as b}from"./index-f80c8c95.js";import{m as T}from"./classUtils-ef6e60eb.js";import{g as R,F}from"./FormField-4fd9b208.js";import"./_Link-b7c9c4c9.js";import{a as w,u as G}from"./_useMobileMenuToggling-0971be40.js";import"./getSVGtext-8f35f9ab.js";const V=e=>{const{className:p,bem:i,disabled:n,readOnly:l,Toggler:r,onSelected:d,isRadio:m,inputProps:t={}}=e,[s,f]=w(e,"value",[]),c=G(e.name),_=b.useMemo(()=>{const a=e.options;return typeof a[0]=="string"?a.map(u=>({value:u})):a},[e.options]);return o.jsx("ul",{className:T(i,null,p),role:"group","aria-labelledby":e["aria-labelledby"],"aria-describedby":e["aria-describedby"],"aria-required":e.required,children:_.map((a,u)=>{const x=a.disabled!=null?a.disabled:n&&typeof n!="boolean"?n.includes(u):n,P=s.includes(a.value);return o.jsx(r,{...t,className:i+"__item",name:c,Wrapper:"li",...a,label:a.label||a.value,onChange:q=>{t.onChange&&t.onChange(q);const{value:y}=a,v=q.currentTarget.checked,g=m?[]:s.filter(N=>N!==y);v&&g.push(y),f(g),d&&d({value:y,checked:v,option:a,selectedValues:g})},disabled:x,readOnly:l,"aria-invalid":e["aria-invalid"],checked:P},u)})})};try{V.displayName="TogglerGroup",V.__docgenInfo={description:"",displayName:"TogglerGroup",props:{options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:'string[] | TogglerGroupOptions<"default", {}>'}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | readonly number[]"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:"RestrictedInputProps"}},onSelected:{defaultValue:null,description:"",name:"onSelected",required:!1,type:{name:'((payload: { value: string; checked: boolean; option: TogglerGroupOption<"default", {}>; selectedValues: string[]; }) => void)'}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-invalid":{defaultValue:null,description:"",name:"aria-invalid",required:!1,type:{name:'boolean | "true" | "false"'}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},bem:{defaultValue:null,description:"",name:"bem",required:!0,type:{name:"string"}},Toggler:{defaultValue:null,description:"",name:"Toggler",required:!0,type:{name:"(props: TogglerInputProps) => Element"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"readonly string[]"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"readonly string[]"}},isRadio:{defaultValue:null,description:"",name:"isRadio",required:!1,type:{name:"true"}}}}}catch{}const h=e=>{const{bem:p,Toggler:i,modifier:n,value:l,defaultValue:r,fieldWrapperProps:d,...m}=R(e),t=b.useMemo(()=>l==null?void 0:typeof l=="string"?[l]:l,[l]),s=b.useMemo(()=>r==null?void 0:typeof r=="string"?[r]:r,[r]);return o.jsx(F,{extraClassName:T(p,n),group:!0,...d,renderInput:(f,c)=>o.jsx(V,{bem:f.options,...c,...m,disabled:e.disabled,value:t,defaultValue:s,Toggler:i})})};try{h.displayName="TogglerGroupField",h.__docgenInfo={description:"",displayName:"TogglerGroupField",props:{className:{defaultValue:null,description:'Container className - alongside "FormField"',name:"className",required:!1,type:{name:"string"}},wrapperProps:{defaultValue:null,description:`Custom HTML attributes for the component's wrapper element.

Note, however, that some props may be intentionally
excluded from the list.

__WARNING:__
In some cases props added this way can break the component, og hurt its
accessibility.  Also, some props may get ignored, or over-ridden by the
component. User discretion is advised.`,name:"wrapperProps",required:!1,type:{name:"HTMLProps<null, never>"}},id:{defaultValue:null,description:'Optional pre-determinted id="" for the __input',name:"id",required:!1,type:{name:"string"}},ssr:{defaultValue:null,description:`Indicates whether server-side rendering is supported or not.

The \`ssr-only\` value is useful for cases where you need
to demo the server-rendered version in a browser.`,name:"ssr",required:!1,type:{name:"SSRSupport"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},assistText:{defaultValue:null,description:"",name:"assistText",required:!1,type:{name:"string | Element"}},hideLabel:{defaultValue:null,description:"",name:"hideLabel",required:!1,type:{name:"boolean"}},invalid:{defaultValue:null,description:"",name:"invalid",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"",name:"errorMessage",required:!1,type:{name:"string | Element"}},reqText:{defaultValue:null,description:`Hidden label prefix text to indicate that the field is required.

If your field is required but should not say so in its label
then set this prop to \`false\`

Default: \`"Þarf að fylla út"\``,name:"reqText",required:!1,type:{name:"string | false"}},wrapperRef:{defaultValue:null,description:"@deprecated Use `*Props.wrapperProps.ref` instead (Will be removed in v0.11)\n\nRef object pointing to the outermost `.FormField` element",name:"wrapperRef",required:!1,type:{name:"RefObject<HTMLElement>"}},LabelTag:{defaultValue:null,description:"",name:"LabelTag",required:!1,type:{name:"enum",value:[{value:'"h3"'},{value:'"h4"'},{value:'"h5"'}]}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:'string[] | TogglerGroupOptions<"default", {}>'}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | readonly number[]"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:"RestrictedInputProps"}},onSelected:{defaultValue:null,description:"",name:"onSelected",required:!1,type:{name:'((payload: { value: string; checked: boolean; option: TogglerGroupOption<"default", {}>; selectedValues: string[]; }) => void)'}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-invalid":{defaultValue:null,description:"",name:"aria-invalid",required:!1,type:{name:'boolean | "true" | "false"'}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}},Toggler:{defaultValue:null,description:"",name:"Toggler",required:!0,type:{name:"(props: TogglerInputProps) => ReactElement<any, string | JSXElementConstructor<any>>"}},isRadio:{defaultValue:null,description:"",name:"isRadio",required:!1,type:{name:"true"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | readonly string[]"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | readonly string[]"}},bem:{defaultValue:null,description:"",name:"bem",required:!0,type:{name:"string"}},modifier:{defaultValue:null,description:`List of CSS BEM --modifier's to add to the component's main wrapper.

All falsy values are neatly skipped.`,name:"modifier",required:!1,type:{name:"Modifiers"}}}}}catch{}export{h as T};
//# sourceMappingURL=_TogglerGroupField-2036fa63.js.map
