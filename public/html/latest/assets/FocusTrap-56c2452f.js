import{j as p}from"./jsx-runtime-f961835c.js";const o=t=>{const r=t.Tag||"span";return p.jsx(r,{tabIndex:0,onFocus:l=>{var n;let e=l.currentTarget,u=Math.max(t.depth||1,1);for(;u--&&e;)e=e.parentElement;if(!e)return;const a=e.querySelectorAll("a,input, select, textarea,button, [tabindex]"),s=t.atTop?a.length-1:0;(n=a[s])==null||n.focus()}})};try{o.displayName="FocusTrap",o.__docgenInfo={description:`A focus trap element that can be used to keep keyboard focus within a container block.

Make sure you only trap focus when a modal or`,displayName:"FocusTrap",props:{Tag:{defaultValue:null,description:"The HTML tag to use for the trap element. (Default `<span />`)",name:"Tag",required:!1,type:{name:"enum",value:[{value:'"span"'},{value:'"li"'}]}},atTop:{defaultValue:null,description:"Set to `true` for focus traps positioned at the top of a container.",name:"atTop",required:!1,type:{name:"boolean"}},depth:{defaultValue:null,description:"How deep the trap is placed in the DOM tree beneath its container element.\n\nDefault: `1`",name:"depth",required:!1,type:{name:"number"}}}}}catch{}export{o as F};
//# sourceMappingURL=FocusTrap-56c2452f.js.map
