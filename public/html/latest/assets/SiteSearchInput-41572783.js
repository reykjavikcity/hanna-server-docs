import{j as r}from"./jsx-runtime-f961835c.js";import{r as I}from"./index-f80c8c95.js";import{g as T,F as q}from"./FormField-d640972f.js";const m=t=>{const{onChange:a,inputRef:f,buttonText:u="Leita",onSubmit:s,onButtonClick:l=t.onSubmit,button:h,onKeyDown:o,placeholder:i=typeof t.label=="string"?t.label:void 0,fieldWrapperProps:b,...p}=T(t),{value:d,defaultValue:y}=p,[_,g]=I.useState(void 0),c=!!(d??_??!!y),v=!c&&!i,S=d!=null?a:n=>{g(!!n.target.value),a&&a(n)},w=h!==!1;return r.jsx(q,{extraClassName:"SiteSearchInput",empty:v,filled:c,...b,renderInput:(n,x,V)=>r.jsxs("div",{className:n.input,...V(),children:[r.jsx("input",{className:"SiteSearchInput__input",onChange:S,...x,placeholder:i,onKeyDown:s?e=>{e.key==="Enter"&&s(e.currentTarget.value)!==!0&&e.preventDefault(),o&&o(e)}:o,...p,ref:f})," ",w&&r.jsx("button",{className:"SiteSearchInput__button",type:"submit",onClick:l&&(e=>l(e.currentTarget.value)!==!0&&e.preventDefault()),title:u,children:u})]})})};try{m.displayName="SiteSearchInput",m.__docgenInfo={description:"",displayName:"SiteSearchInput",props:{id:{defaultValue:null,description:'Optional pre-determinted id="" for the __input',name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},ssr:{defaultValue:null,description:`Indicates whether server-side rendering is supported or not.

The \`ssr-only\` value is useful for cases where you need
to demo the server-rendered version in a browser.`,name:"ssr",required:!1,type:{name:"SSRSupport"}},wrapperProps:{defaultValue:null,description:`Custom HTML attributes for the component's wrapper element.

Note, however, that some props may be intentionally
excluded from the list.

__WARNING:__
In some cases props added this way can break the component, og hurt its
accessibility.  Also, some props may get ignored, or over-ridden by the
component. User discretion is advised.`,name:"wrapperProps",required:!1,type:{name:"HTMLProps<null, never>"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},onSubmit:{defaultValue:null,description:"Triggered when user hits ENTER key with the focus inside the input field.\n\nReturn `true` to __allow__ the browser's default submit hehavior.",name:"onSubmit",required:!1,type:{name:"((value: string) => boolean | void)"}},onButtonClick:{defaultValue:null,description:"Custom action to perform when the user clicks the search button.\n\nReturn `true` to __allow__ the browser's default submit hehavior.\n\nDefaults to `onSubmit`.",name:"onButtonClick",required:!1,type:{name:"((value: string) => boolean | void)"}},button:{defaultValue:null,description:"Toggle the search `<button/>`.\n\nDefaults to `true`.",name:"button",required:!1,type:{name:"boolean"}},buttonText:{defaultValue:null,description:"",name:"buttonText",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}}}}}catch{}export{m as S};
//# sourceMappingURL=SiteSearchInput-41572783.js.map
